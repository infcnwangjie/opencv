	import cv2
	import numpy as np

	# 目标搜索图片
	target = cv2.imread('d:/2020-05-12-10-53-30test.bmp')
	target = cv2.resize(target, (IMG_WIDTH, IMG_HEIGHT))
	hsvt = cv2.cvtColor(target, cv2.COLOR_BGR2HSV)


	# roi图片，就想要找的的图片
	roi = cv2.imread('d:/T_G_R_.png')
	hsv = cv2.cvtColor(roi, cv2.COLOR_BGR2HSV)


	# 计算目标直方图
	roihist = cv2.calcHist([hsv], [0, 1], None, [180, 256], [0, 180, 0, 256])
	# 归一化，参数为原图像和输出图像，归一化后值全部在2到255范围
	cv2.normalize(roihist, roihist, 0, 255, cv2.NORM_MINMAX)
	dst = cv2.calcBackProject([hsvt], [0, 1], roihist, [0, 180, 0, 256], 1)

	# 卷积连接分散的点
	disc = cv2.getStructuringElement(cv2.MORPH_RECT, (3, 3))
	dst = cv2.filter2D(dst, -1, disc)

	ret, thresh = cv2.threshold(dst, 50, 255, 0)
	# 使用merge变成通道图像
	# thresh = cv2.merge((thresh, thresh, thresh))
	thresh = cv2.medianBlur(thresh, 3)

	contours, _hierarchy = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
	for contour in contours:
		area=cv2.contourArea(contour)
		if area<100:continue
		rect = cv2.boundingRect(contour)
		rect_x, rect_y, rect_w, rect_h = rect
		cv2.rectangle(target, (rect_x, rect_y), (rect_x + rect_w, rect_y + rect_h), color=(0, 255, 255),
		              thickness=1)

	# 蒙板
	# res = cv2.bitwise_and(target, thresh)
	# 矩阵按列合并,就是把target,thresh和res三个图片横着拼在一起
	# cv2.imwrite('res.jpg', res)
	# 显示图像
	cv2.imshow('1', thresh)
	cv2.imshow('target', target)
	cv2.waitKey(0)